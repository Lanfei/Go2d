import Stage from './Stage';
import Ticker from '../core/Ticker';
import Matrix from '../geom/Matrix';
import Rectangle from '../geom/Rectangle';
import TouchEvent from '../event/TouchEvent';
import EventEmitter from '../event/EventEmitter';
export default class DisplayObject extends EventEmitter {
    name: string;
    tag: string;
    touchable: boolean;
    protected $x: number;
    protected $y: number;
    protected $width: number;
    protected $height: number;
    protected $anchorX: number;
    protected $anchorY: number;
    protected $skewX: number;
    protected $skewY: number;
    protected $scaleX: number;
    protected $scaleY: number;
    protected $rotation: number;
    protected $alpha: number;
    protected $visible: boolean;
    protected $background: string;
    protected $dirty: boolean;
    protected $stage: Stage;
    protected $parent: DisplayObject;
    protected readonly $pixelRatio: number;
    protected readonly $children: Array<DisplayObject>;
    protected readonly $touches: Array<boolean>;
    protected readonly $canvas: HTMLCanvasElement;
    protected readonly $context: CanvasRenderingContext2D;
    constructor();
    width: number;
    height: number;
    x: number;
    y: number;
    anchorX: number;
    anchorY: number;
    skewX: number;
    skewY: number;
    scaleX: number;
    scaleY: number;
    rotation: number;
    alpha: number;
    background: string;
    visible: boolean;
    readonly dirty: boolean;
    readonly stage: Stage;
    readonly parent: DisplayObject;
    readonly children: Array<DisplayObject>;
    readonly ticker: Ticker;
    readonly canvas: HTMLCanvasElement;
    addChild(child: DisplayObject): this;
    addChildAt(child: DisplayObject, index: number): this;
    removeChild(child: DisplayObject): this;
    removeChildAt(index: number): this;
    removeChildrenByName(name: string): this;
    removeChildrenByTag(tag: any): this;
    removeAllChildren(): this;
    getChildByName(name: any): DisplayObject;
    getChildrenByTag(tag: any): Array<DisplayObject>;
    getChildAt(index: any): DisplayObject;
    getChildIndex(child: any): number;
    swapChildren(child1: any, child2: any): this;
    swapChildrenAt(index1: any, index2: any): this;
    protected $getTransform(): Matrix;
    protected $resizeCanvas(): void;
    protected $getChildBounds(child: DisplayObject): Rectangle;
    protected $getContentBounds(): Rectangle;
    protected $emitTouchEvent(event: TouchEvent): boolean;
    protected $drawChild(child: DisplayObject): void;
    protected $render(): void;
    on(event: string, listener: (...args: any[]) => void): this;
    off(event: string, listener?: (...args: any[]) => void): this;
    protected $onAdded(parent: DisplayObject): void;
    protected $onRemoved(): void;
    protected $onAddedToStage(stage: Stage): void;
    protected $onRemovedFromStage(stage: Stage): void;
    protected $markDirty(): void;
    protected $markParentDirty(): void;
}

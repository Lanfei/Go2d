import Layer from './Layer';
import Image from '../media/Image';
import Ticker from '../core/Ticker';
import Event from '../event/Event';
import Rectangle from '../geom/Rectangle';
import ResourceManager, { ResourceInfo, ResourceManagerOption } from '../net/ResourceManager';
export default class Stage extends Layer {
    static readonly NO_SCALE: string;
    static readonly NO_BORDER: string;
    static readonly SHOW_ALL: string;
    static readonly EXACT_FIT: string;
    static readonly FIXED_WIDE: string;
    static readonly FIXED_NARROW: string;
    static readonly FIXED_WIDTH: string;
    static readonly FIXED_HEIGHT: string;
    protected $scaleMode: string;
    protected $viewportWidth: number;
    protected $viewportHeight: number;
    protected $renderBounds: Rectangle;
    protected $viewportBackground: Image | string;
    protected readonly $ticker: Ticker;
    protected readonly $viewportCanvas: HTMLCanvasElement;
    protected readonly $viewportContext: CanvasRenderingContext2D;
    protected readonly $boundOnWindowResize: () => void;
    constructor(canvas?: HTMLCanvasElement);
    protected $initEvents(): void;
    x: number;
    y: number;
    scaleMode: string;
    viewportWidth: number;
    viewportHeight: number;
    viewportBackground: Image | string;
    readonly ticker: Ticker;
    createResourceManager(list: Array<ResourceInfo>, options?: ResourceManagerOption): ResourceManager;
    protected $addTouchEventListeners(): void;
    protected $dispatchTouches(type: string, event: Event): void;
    protected $dispatchTouchEvent(type: string, touch: Touch | MouseEvent): void;
    protected $calculateRenderBounds(): void;
    protected $resizeCanvas(): void;
    protected $render(): void;
    protected $onWindowResize(): void;
}
